# Python CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-python/ for more details

version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.19

dependencies:
  cache_directories:
    - "~/.apt-cache"
  pre:
    - sudo rm -rf /var/cache/apt/archives && sudo ln -s ~/.apt-cache /var/cache/apt/archives && mkdir -p ~/.apt-cache/partial

apt-run: &apt-install
  name: install system packages
  command: |
    sudo apt update -qq
    sudo apt install -y python-dev python3-dev -qq

executors:
  content-executor:
    docker:
      - image: circleci/python:latest
    working_directory: ~/repo

jobs:
  terraform-build-attack-destroy:
    executor: content-executor
    steps:
      - run:
          name: checkout repo
          command: |
            if [[ ! -z "${CIRCLE_PULL_REQUEST}" &&  ! -z "${CIRCLE_PR_NUMBER}" ]]; then
                git clone https://${GITHUB_TOKEN}@github.com/splunk/attack_range.git
                cd attack_range
                git fetch origin pull/${CIRCLE_PR_NUMBER}/head:${CIRCLE_BRANCH}
                git checkout ${CIRCLE_BRANCH}
            elif [ "${CIRCLE_BRANCH}" == "" ]; then
                git clone https://${GITHUB_TOKEN}@github.com/splunk/attack_range.git
            else
                git clone --branch ${CIRCLE_BRANCH} https://${GITHUB_TOKEN}@github.com/splunk/attack_range.git
            fi
      - restore_cache:
          key: virtualenv
      - run: *apt-install
      - run:
          name: install python dependencies
          command: |
            cd attack_range
            rm -rf venv
            virtualenv --python=/usr/bin/python3 --clear venv
            source venv/bin/activate
            pip install -q -r requirements.txt
      - save_cache:
          key: virtualenv
          paths:
            - "/attack_range/venv"
      - run:
          name: verify attack_range.py executes
          command: |
            cd attack_range
            source venv/bin/activate
            cp attack_range.conf.template attack_range.conf
            sed -i "s/attack_range_password = .*$/attack_range_password = Pl3ase-k1Ll-me:p123/g" attack_range.conf
            python attack_range.py --version

      - aws-cli/setup:
          profile-name: default

      - add_ssh_keys:
          fingerprints:
            - "2d:d6:d0:a5:f6:97:6c:43:f1:aa:8c:e9:47:ea:47:c2"

      - run:
          name: install terraform
          command: |
            wget https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_linux_amd64.zip
            sudo unzip terraform_0.12.24_linux_amd64.zip -d /usr/bin
            rm terraform_0.12.24_linux_amd64.zip
            terraform --version

      - run:
          name: test terraform build, attack, destroy
          command: |
            cd attack_range
            source venv/bin/activate
            cp attack_range.conf.template attack_range.conf
            sed -i "s/attack_range_password = .*$/attack_range_password = Pl3ase-k1Ll-me:p123/g" attack_range.conf
            # change attack_range default ssh keys
            sed -i "s/key_name = .*$/key_name = attack-range-ci-job/g" attack_range.conf
            sed -i "s/region = us-west-2/region = us-east-2/g" attack_range.conf
            sed -i "s/private_key_path =.*$/private_key_path = ~\/.ssh\/id_rsa_2dd6d0a5f6976c43f1aa8ce947ea47c2/g" attack_range.conf
            sed -i "s/windows_domain_controller = .*$/windows_domain_controller = 1/g" attack_range.conf
            cd terraform/aws/
            terraform init
            cd ../..
            python attack_range.py build
            python attack_range.py simulate --target ar-win-dc-default-attack-range-ci-job --simulation_technique T1003.002
            python attack_range.py destroy
      - run:
          name: cleanup terraform on failures
          command: |
            cd attack_range
            source venv/bin/activate
            python attack_range.py destroy
          when: on_fail
workflows:
  version: 2.1
  build-attack-destroy:
    triggers:
      - schedule:
          cron: "15 13 * * *"
          filters:
            branches:
              only:
                - develop
    jobs:
      - terraform-build-attack-destroy
